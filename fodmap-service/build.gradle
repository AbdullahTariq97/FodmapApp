import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

//    // This gives you the cassandra repository class
    implementation 'com.datastax.cassandra:cassandra-driver-core:3.11.0'
//
    implementation 'org.springframework.data:spring-data-cassandra:2.2.10.RELEASE'
// Why do we have to add this to avoid Caused by: java.lang.ClassNotFoundException: com.codahale.metrics.JmxReporter
    implementation 'com.codahale.metrics:metrics-core:3.0.2'



//
//    // For running embedded cassandra
//    implementation 'org.cassandraunit:cassandra-unit-spring:4.3.1.0'
//    implementation 'org.cassandraunit:cassandra-unit-shaded:4.3.1.0'
//    implementation 'org.hectorclient:hector-core:2.0-0'

    // for header authentication when sending http requests to endpoints
    implementation  'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //JSON
    implementation 'org.json:json:20201115'

    implementation 'com.datastax.cassandra:cassandra-driver-mapping:3.11.0'
}

processResources {
    expand(project.properties)
}
test {
    useJUnitPlatform()
}

